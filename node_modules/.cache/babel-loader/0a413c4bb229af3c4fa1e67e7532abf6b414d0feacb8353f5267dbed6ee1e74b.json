{"ast":null,"code":"import { insertStep } from './helpers';\nconst mergeSort = (array, position, arraySteps, colorSteps) => {\n  if (array.length === 1) return array;\n  let mid = Math.floor(array.length / 2);\n  let L = mergeSort(array.slice(0, mid), position, arraySteps, colorSteps);\n  let R = mergeSort(array.slice(mid), position + mid, arraySteps, colorSteps);\n  let arrayNew = merge(L, R, position, arraySteps, colorSteps);\n  arraySteps.push(arraySteps[arraySteps.length - 1].slice());\n  colorSteps.push(colorSteps[colorSteps.length - 1].slice().fill(arrayNew.length === arraySteps[0].length ? 2 : 0));\n  return arrayNew;\n};\nconst merge = (L, R, position, arraySteps, colorSteps) => {\n  let arrayNew = [];\n  let A = 0;\n  let B = 0;\n  while (L.length > 0 && R.length > 0) {\n    if (L[A] < R[B]) {\n      arrayNew.push(L.shift());\n      insertStep(arrayNew, position, arraySteps);\n    } else {\n      arrayNew.push(R.shift());\n      insertStep(arrayNew, position, arraySteps);\n    }\n    updateColor(position, colorSteps, arrayNew.length - 1, [], []);\n  }\n  if (L.length !== 0 || R.length !== 0) {\n    updateColor(position, colorSteps, arrayNew.length, L, R);\n    arrayNew = arrayNew.concat(L);\n    arrayNew = arrayNew.concat(R);\n    insertStep(arrayNew, position, arraySteps);\n  }\n  return arrayNew;\n};\nconst updateColor = (position, colorSteps, start, L, R) => {\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\n  let end = position + start + L.length + R.length;\n  start = start + position;\n  if (end === start) {\n    colorKey.fill(1, start, end + 1);\n  } else {\n    colorKey.fill(0, start, end);\n  }\n  colorSteps.push(colorKey);\n};\nexport default mergeSort;","map":{"version":3,"names":["insertStep","mergeSort","array","position","arraySteps","colorSteps","length","mid","Math","floor","L","slice","R","arrayNew","merge","push","fill","A","B","shift","updateColor","concat","start","colorKey","end"],"sources":["E:/Sorting-Visualiser/sorting-visualiser/src/algorithms/MergeSort.js"],"sourcesContent":["import { insertStep } from './helpers';\r\n\r\nconst mergeSort = (array, position, arraySteps, colorSteps) => {\r\n\tif (array.length === 1) return array;\r\n\tlet mid = Math.floor(array.length / 2);\r\n\r\n\tlet L = mergeSort(array.slice(0, mid), position, arraySteps, colorSteps);\r\n\tlet R = mergeSort(array.slice(mid), position + mid, arraySteps, colorSteps);\r\n\r\n\tlet arrayNew = merge(L, R, position, arraySteps, colorSteps);\r\n\tarraySteps.push(arraySteps[arraySteps.length - 1].slice());\r\n\tcolorSteps.push(\r\n\t\tcolorSteps[colorSteps.length - 1]\r\n\t\t\t.slice()\r\n\t\t\t.fill(arrayNew.length === arraySteps[0].length ? 2 : 0)\r\n\t);\r\n\treturn arrayNew;\r\n};\r\n\r\nconst merge = (L, R, position, arraySteps, colorSteps) => {\r\n\tlet arrayNew = [];\r\n\tlet A = 0;\r\n\tlet B = 0;\r\n\r\n\twhile (L.length > 0 && R.length > 0) {\r\n\t\tif (L[A] < R[B]) {\r\n\t\t\tarrayNew.push(L.shift());\r\n\t\t\tinsertStep(arrayNew, position, arraySteps);\r\n\t\t} else {\r\n\t\t\tarrayNew.push(R.shift());\r\n\t\t\tinsertStep(arrayNew, position, arraySteps);\r\n\t\t}\r\n\t\tupdateColor(position, colorSteps, arrayNew.length - 1, [], []);\r\n\t}\r\n\r\n\r\n\tif (L.length !== 0 || R.length !== 0) {\r\n\t\tupdateColor(position, colorSteps, arrayNew.length, L, R);\r\n\t\tarrayNew = arrayNew.concat(L);\r\n\t\tarrayNew = arrayNew.concat(R);\r\n\t\tinsertStep(arrayNew, position, arraySteps);\r\n\t}\r\n\r\n\treturn arrayNew;\r\n};\r\n\r\nconst updateColor = (position, colorSteps, start, L, R) => {\r\n\tlet colorKey = colorSteps[colorSteps.length - 1].slice();\r\n\tlet end = position + start + L.length + R.length;\r\n\tstart = start + position;\r\n\r\n\tif (end === start) {\r\n\t\tcolorKey.fill(1, start, end + 1);\r\n\t} else {\r\n\t\tcolorKey.fill(0, start, end);\r\n\t}\r\n\tcolorSteps.push(colorKey);\r\n};\r\n\r\nexport default mergeSort;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}